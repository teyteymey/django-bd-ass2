openapi: 3.0.3
info:
  version: 1.0.0
  title: Appvocado API
  description: A simple API to illustrate OpenAPI concepts
servers:
  - url: 'localhost:8000/api/'
tags:
- name: credentials
  description: Credential operations
- name: offer
  description: Offer operations
- name: reservation
  description: Reservation operations
- name: category
  description: Category operations
- name: user
  description: user operations
paths:
  /credentials:
    post:
      tags:
      - credentials
      summary: test
      description: test
      responses:
        200:
          description: succes
        400:
          description: invalid credentials
  /users:
    post:
      tags:
      - user
      responses:
        200:
          description: test
    get:
      tags:
      - user
      responses:
        200:
          description: test
  /users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
      - user
      responses:
        200:
          description: test
  /offers:
    get:
      tags:
      - offer
      summary: test
      description: Returns a list of offers
      responses:
        '200':
          description: Successfully returned a list of offers
    post:
      tags:
      - offer
      summary: test
      description: description
      responses:
        '201':
          description: description
        '400':
          description: description
  /offers/{offerId}:
    parameters:
      - name: offerId
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
      - offer
      summary: test
      description: test
      responses:
        '200':
          description: Successfully returned an artist
    put:
      tags:
      - offer
      summary: test
      description: test

      responses:
        '200':
          description: Successfullytest
    delete:
      tags:
      - offer
      summary: test
      description: test
      responses:
        '200':
          description: Successfully returned an artist
  /offers/{offer_id}/reservations:
    parameters:
      - name: offer_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
      - reservation
      summary: test
      description: test
      responses:
        '200':
          description: test
    post:
      tags:
      - reservation
      summary: test
      description: test
      responses:
        '201':
          description: test
  /offers/{offer_id}/reservations/{reservation_id}:
    parameters:
      - name: offer_id
        in: path
        required: true
        schema:
          type: integer
      - name: reservation_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
      - reservation
      summary: test
      description: test
      responses:
        '200':
          description: test
    delete:
      tags:
      - reservation
      summary: test
      description: test
      responses:
        '200':
          description: test
  /categories:
    get:
      tags:
      - category
      summary: test
      description: test
      responses:
        '200':
          description: test
    post:
      tags:
      - category
      summary: test
      description: test
      responses:
        '200':
          description: test
  /categories/{category_id}:
    parameters:
      - name: category_id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
      - category
      summary: test
      description: test
      responses:
        '200':
          description: test
    put:
      tags:
      - category
      summary: test
      description: test
      responses:
        '200':
          description: test
    delete:
      tags:
      - category
      summary: test
      description: test
      responses:
        '200':
          description: test
components:
  schemas:
    Offer:
      type: object
      properties:
        id:
          type: integer
        category_id:
          type: integer
        user_id:
          type: integer
        title:
          type: string
        description:
          type: string
        image:
          type: string
          format: url
        closed:
          type: boolean
        end_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
    Reservation:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        offer_id:
          type: integer
        accepted:
          type: boolean
    Category:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        image:
          type: string
          format: url
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        username:
          type: string
        password:
          type: string
          format: password
    UserReview:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        reviewer_id:
          type: integer
        rating:
          type: integer
          minimum: 0
          maximum: 10
  responses:
    404NotFound:
      description: //TODO
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: Not found.
      
      
    
  
